#!/bin/bash

set -eux -o pipefail

# First update base16
base16_path="$XDG_DATA_HOME/base16"

repos=(
  "https://github.com/tinted-theming/base16-shell.git"
  "https://github.com/tinted-theming/base16-tmux.git"
  "https://github.com/tinted-theming/base16-fzf.git"
  "https://github.com/aarowill/base16-alacritty.git"
)

for repo in "${repos[@]}"; do
  folder_name=$(echo "$repo" | cut -d/ -f5 | cut -d. -f1)
  path="$base16_path/$folder_name"
  # If the repo was never cloned, do so, otherwise just update it
  if [ -d "$path" ]; then
    # If the repo already exists, check if the remote has changed and update it if needed
    pushd "$path"
    current_remote_url=$(git remote get-url origin)
    if [ "$current_remote_url" != "$repo" ]; then
      git remote set-url origin "$repo"
    fi
    # Pull the latest changes
    git pull --rebase
    popd

  else
    git clone "$repo" "$path"
  fi
done

# Then neovim plugins
lazy_path="$XDG_DATA_HOME/nvim/lazy/lazy.nvim"

if [ ! -d "$lazy_path" ]; then
  mkdir -p "$(dirname "$lazy_path")"
  git clone --filter=blob:none https://github.com/folke/lazy.nvim.git --branch=stable "$lazy_path"
fi

nvim --headless "+Lazy! sync" +qa

# And finally tmux plugins
tpm_path="$TMUX_PLUGIN_MANAGER_PATH/tpm"

if [ ! -d "$tpm_path" ]; then
  mkdir -p "$(dirname "$tpm_path")"
  git clone https://github.com/tmux-plugins/tpm "$tpm_path"
fi

# If tmux is running, make sure that we update the env variable in case it has a stale one
if ! tmux info &>/dev/null; then
  tmux set-environment -g "TMUX_PLUGIN_MANAGER_PATH" "$XDG_DATA_HOME/tmux/plugins/"
fi

"$TMUX_PLUGIN_MANAGER_PATH"/tpm/bin/install_plugins
"$TMUX_PLUGIN_MANAGER_PATH"/tpm/bin/update_plugins all
