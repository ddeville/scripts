#!/bin/sh

# We use a consistent location for the ssh-agent socket used by tmux so that it doesn't lead to the environment
# variable pointing to a deleted socket when attaching to an existing tmux session across different ssh sessions.
#
# Note that while this can potentially introduce security concerns due to the socket being at a well-known
# location, it is deemed acceptable since our ssh/tmux configs will only be installed on machines that we trust.
#
# Also note that it's technically possible to have multiple simultaneous SSH sessions with different lifetimes.
# For this reason, we don't clobber the main `SSH_AUTH_SOCK` environment variable, leaving the regular ssh flow
# with a forwarded agent untouched.
#
# However, we also want to address the tmux issue so we symlink the *current* ssh socket to a stable well-known
# location that tmux uses (see `tmux.conf`).
#
# Note that we specifically opt-out ssh connections that are non-interactive since it's unlikely for them to last
# and will likely break the agent of a currently logged-in ssh interactive user using tmux.
#
# We also don't update the symlink if the current one is still active. This is to prevent an existing ssh
# connection from getting its agent connection cut because a newer connection was made.
# This is a trade-off since the newer connection will likely have a non-working ssh-agent (its requests will go
# to the host holding the original connection) but it's the least bad of the two options.

if [ -n "$SSH_TTY" ] && [ -S "$SSH_AUTH_SOCK" ]; then
  if [ -S ~/.ssh/ssh_auth_sock ]; then
    echo "WARNING: Another SSH connection is currently forwarding its agent to tmux, things will likely not work as expected."
  else
    ln -sf "$SSH_AUTH_SOCK" ~/.ssh/ssh_auth_sock
  fi
fi
