" vim needs a posix shell and fish is not
if &shell =~# 'fish$'
    set shell=bash
endif

" enable syntax highlighting
syntax enable

" attempt to determine the file type based on name and content
filetype plugin indent on

" vim-plug plugins
call plug#begin('~/.vim-plug-plugins')
    Plug 'itchyny/lightline.vim'
    Plug 'tpope/vim-git'
    Plug 'tpope/vim-fugitive'
    Plug 'tpope/vim-rhubarb'
    Plug 'tpope/vim-commentary'
    Plug 'tpope/vim-eunuch'
    Plug 'tpope/vim-surround'
    Plug 'tpope/vim-unimpaired'
    Plug 'tpope/vim-repeat'
    Plug 'tpope/vim-vinegar'
    Plug 'tpope/vim-dispatch'
    Plug 'vim-scripts/a.vim'
    Plug 'rust-lang/rust.vim'
    Plug 'dag/vim-fish'
    Plug 'mileszs/ack.vim'
    Plug 'junegunn/fzf.vim'
    Plug 'junegunn/fzf', {'dir': '~/.fzf', 'do': './install --bin'}
    Plug 'Valloric/YouCompleteMe', {'do': '/usr/bin/python install.py --clang-completer --rust-completer'}
call plug#end()

" shorten the delay to transition to normal mode after pressing escape
set timeoutlen=1000 ttimeoutlen=0

" set solarized dark as the color scheme
set background=dark
colorscheme solarized

" allow switching between buffers without saving first
set hidden

" use 4 spaces instead of tabs
set shiftwidth=4
set softtabstop=4
set expandtab

" if no known file type keep the same indent as the current line
set autoindent

" backspace through anything in insert mode
set backspace=indent,eol,start

" highlight search results and start searching immediately
set hlsearch
set incsearch

" always show at least one line above/below the cursor (and 5 on each side if not wrapping)
set scrolloff=1
set sidescrolloff=5

" display the cursor position in the status line
set ruler

" display the (relative) line number on the left
set number

" display a column at 120 char
set colorcolumn=120

" highlight the current line
set cursorline

" always show the status line even when there is only one window
set laststatus=2

" autoload file changes
set autoread

" open new splits on right and bottom
set splitbelow
set splitright

" trailing whitespace is bad
highlight WhiteSpaceEOL ctermbg=red guibg=red
autocmd InsertEnter * match WhiteSpaceEOL /\s\+\%#\@<!$/
autocmd InsertLeave * match WhiteSpaceEOL /\s\+$/

" MAPPINGS

" disable arrow keys
map <up> <nop>
map <down> <nop>
map <left> <nop>
map <right> <nop>
imap <up> <nop>
imap <down> <nop>
imap <left> <nop>
imap <right> <nop>

" remap the leader from `\` to `,` and the local leader to `\`
let mapleader="'"
let maplocalleader="\\"

" map screen redraw to also turn off search highlighting
nnoremap <C-L> :nohl<CR><C-L>

" use `H` and `L` to move to start and end of line
nnoremap <S-l> $
nnoremap <S-h> 0

" simpler normal mode mapping
inoremap jk <esc>
inoremap jj <esc>

" ==> CONFIG `junegunn/fzf.vim`

" remap some `fzf` functions
nnoremap ; :Buffers<CR>
nnoremap <Leader>o :Files<CR>
nnoremap <Leader>f :Ag<CR>
nnoremap <Leader>t :Tags<CR>
nnoremap <Leader>s :GFiles?<CR>

" ==> CONFIG `mileszs/ack.vim`

" use `ag` in the `ack` plugin if it's available
if executable('ag')
    " use `ag` over grep
    set grepprg=ag\ --nogroup\ --nocolor
    let g:ackprg='ag --nogroup --nocolor --column'
endif

" ==> CONFIG `itchyny/lightline.vim`

" don't show `-- INSERT --` since we have a fancy status line
set noshowmode

" update color scheme
let g:lightline = {
    \ 'colorscheme': 'wombat',
    \ 'active': {
    \   'left': [['mode', 'paste'], ['gitbranch', 'readonly', 'filename', 'modified']]
    \ },
    \ 'component_function': {
    \   'gitbranch': 'fugitive#head'
    \ },
    \ }

" LANGUAGES

" rust
let g:rustfmt_autosave = 1
